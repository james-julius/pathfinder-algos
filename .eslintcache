[{"/Users/james/Coding/path-algo/src/App.js":"1","/Users/james/Coding/path-algo/src/reportWebVitals.js":"2","/Users/james/Coding/path-algo/src/index.js":"3"},{"size":1518,"mtime":1606712387247,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1606703639670,"results":"6","hashOfConfig":"5"},{"size":500,"mtime":1606703639669,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"bqy0eu",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/james/Coding/path-algo/src/App.js",["15","16","17","18","19","20","21"],"import './App.scss';\nimport { useCallback, useEffect, useState } from 'react';\n\nfunction App() {\n  const [columns, setColumns] = useState(15);\n  const [rows, setRows] = useState(15);\n  const [cellWidth, setCellWidth] = useState(30);\n  const [cellHeight, setCellHeight] = useState(30);\n  const [map, setMap] = useState([\n    [0, 0, 0],\n    [0, 0, 0]\n  ]);\n  const [obstacleFrequency, setObstacleFrequency] = useState(0.3);\n\n  class Node {\n    constructor(x, y) {\n      this.x = x;\n      this.y = y;\n      this.neighbours = [];\n      this.previous = null;\n      this.imPassable = Math.random() < obstacleFrequency;\n    }\n  }\n\n  const mapSetup = useCallback(() => {\n    const mapToBe = [];\n    for (let column = 0; column < columns; column++) {\n      mapToBe.push([]);\n      for (let row = 0; row < rows; row++) {\n        mapToBe[column][row] = new Node(row, column);\n      }\n    }\n    console.log('setting map to:' + mapToBe);\n    setMap(mapToBe);\n  }, []);\n\n  useEffect(() => {\n    mapSetup();\n  }, []);\n\n\n  return (\n    <div className=\"App\">\n      <div id=\"map\" style={{height: \"auto\"}}>\n        {map && map.map((row, idx) => {\n          return <div className=\"column\">\n            {row[idx] && map[idx].map((cell) => {\n              return <>\n                <div \n                  class={`cell ${cell.class}`} \n                  style={{height: cellHeight, width: cellWidth}}>\n                </div>\n              </>\n            })}\n          </div>\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/james/Coding/path-algo/src/reportWebVitals.js",[],"/Users/james/Coding/path-algo/src/index.js",[],{"ruleId":"22","severity":1,"message":"23","line":5,"column":19,"nodeType":"24","messageId":"25","endLine":5,"endColumn":29},{"ruleId":"22","severity":1,"message":"26","line":6,"column":16,"nodeType":"24","messageId":"25","endLine":6,"endColumn":23},{"ruleId":"22","severity":1,"message":"27","line":7,"column":21,"nodeType":"24","messageId":"25","endLine":7,"endColumn":33},{"ruleId":"22","severity":1,"message":"28","line":8,"column":22,"nodeType":"24","messageId":"25","endLine":8,"endColumn":35},{"ruleId":"22","severity":1,"message":"29","line":13,"column":29,"nodeType":"24","messageId":"25","endLine":13,"endColumn":49},{"ruleId":"30","severity":1,"message":"31","line":35,"column":6,"nodeType":"32","endLine":35,"endColumn":8,"suggestions":"33"},{"ruleId":"30","severity":1,"message":"34","line":39,"column":6,"nodeType":"32","endLine":39,"endColumn":8,"suggestions":"35"},"no-unused-vars","'setColumns' is assigned a value but never used.","Identifier","unusedVar","'setRows' is assigned a value but never used.","'setCellWidth' is assigned a value but never used.","'setCellHeight' is assigned a value but never used.","'setObstacleFrequency' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'Node', 'columns', and 'rows'. Either include them or remove the dependency array.","ArrayExpression",["36"],"React Hook useEffect has a missing dependency: 'mapSetup'. Either include it or remove the dependency array.",["37"],{"desc":"38","fix":"39"},{"desc":"40","fix":"41"},"Update the dependencies array to be: [Node, columns, rows]",{"range":"42","text":"43"},"Update the dependencies array to be: [mapSetup]",{"range":"44","text":"45"},[951,953],"[Node, columns, rows]",[998,1000],"[mapSetup]"]